package me.madcat.features.modules.exploit;

import com.mojang.realmsclient.gui.ChatFormatting;
import java.util.HashMap;
import me.madcat.features.command.Command;
import me.madcat.features.modules.Module;
import net.minecraft.entity.Entity;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.util.math.Vec3d;

public class TeleportLog
extends Module {
    private final HashMap<String, Vec3d> tpdPlayers;
    private int numForgetTicks;
    private final HashMap<Entity, Vec3d> knownPlayers = new HashMap();
    private int numTicks;

    public TeleportLog() {
        super("TeleportLog", "New exploit", Module.Category.EXPLOIT);
        this.tpdPlayers = new HashMap();
    }

    private String vectorToString(Vec3d vec3d) {
        return "(" + (int) Math.floor(vec3d.x) + ", " + (int) Math.floor(vec3d.z) + ")";
    }

    @Override
    public void onUpdate() {
        if (this.numTicks >= 50) {
            this.numTicks = 0;
            for (Entity entity : TeleportLog.mc.world.loadedEntityList) {
                if (entity instanceof EntityPlayer && !entity.getName().equals(TeleportLog.mc.player.getName())) {
                    Vec3d vec3d = new Vec3d(entity.posX, entity.posY, entity.posZ);
                    if (this.knownPlayers.containsKey(entity) && Math.abs(this.knownPlayers.get(entity).distanceTo(vec3d)) > 50.0 && Math.abs(TeleportLog.mc.player.getPositionVector().distanceTo(vec3d)) > 100.0 && (!this.tpdPlayers.containsKey(entity.getName()) || this.tpdPlayers.get(entity.getName()) != vec3d)) {
                        Command.sendMessage(ChatFormatting.WHITE + entity.getName() + ChatFormatting.GRAY + " has TP'd to " + ChatFormatting.WHITE + this.vectorToString(vec3d));
                        this.knownPlayers.remove(entity);
                        this.tpdPlayers.put(entity.getName(), vec3d);
                    }
                    this.knownPlayers.put(entity, vec3d);
                }
            }
        }
        if (this.numForgetTicks >= 9000000) {
            this.tpdPlayers.clear();
        }
        ++this.numTicks;
        ++this.numForgetTicks;
    }
}

